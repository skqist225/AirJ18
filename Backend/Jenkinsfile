pipeline {
    agent any 
    options {
        skipStagesAfterUnstable()
    }
    stages {
        stage('Build') {
            steps {
                sh 'echo $(pwd)'
                sh 'mvn clean package --file */pom.xml'
            }
            // post {
                // success {
                    // echo 'Now archiving the artifacts...'
                    // archiveArtifacts artifacts: '**/target/*.war'
                // }
            // }
        }
        stage('Send Build Artifact To AWS S3') {
            environment {
                AWS_S3_BUCKET = 'airj18'
                BACKEND_FOLDER = 'Backend'
            }

            steps {
                sh 'aws s3 cp ${WORKSPACE}/${JOB_NAME}/${BACKEND_FOLDER}/target/*.war s3://${AWS_S3_BUCKET}'
                // build job: 'Copy_Artifact_To_AWS_EC2'
            }
        }
        stage('Deploy Application Prodution Stage') {
            // environment { 
            //     DB_URL = credentials('airtnt.cvkwid3ehrok.ap-southeast-1.rds.amazonaws.com')
            //     DB_USER = credentials('admin')
            //     DB_PASS = credentials('12345678')
            // }
            steps {
                timeout(time:5, unit:'DAYS') {
                    input message: 'Approve PRODUCTION Deployment?'
                }
                // build job: 'Deploy_AirJ18'
                sshPublisher(publishers: [sshPublisherDesc(configName: 'ubuntu@54.255.237.181', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '~/airtnt-build.sh airtnt.cvkwid3ehrok.ap-southeast-1.rds.amazonaws.com admin 12345678', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '.')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
            }
        }
    }
}

